/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from "@tanstack/react-start/server";

import { Route as rootRouteImport } from "./routes/__root";
import { Route as IndexRouteImport } from "./routes/index";
import { ServerRoute as ApiWebhooksMittwaldServerRouteImport } from "./routes/api/webhooks.mittwald";

const rootServerRouteImport = createServerRootRoute();

const IndexRoute = IndexRouteImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => rootRouteImport,
} as any);
const ApiWebhooksMittwaldServerRoute =
	ApiWebhooksMittwaldServerRouteImport.update({
		id: "/api/webhooks/mittwald",
		path: "/api/webhooks/mittwald",
		getParentRoute: () => rootServerRouteImport,
	} as any);

export interface FileRoutesByFullPath {
	"/": typeof IndexRoute;
}
export interface FileRoutesByTo {
	"/": typeof IndexRoute;
}
export interface FileRoutesById {
	__root__: typeof rootRouteImport;
	"/": typeof IndexRoute;
}
export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths: "/";
	fileRoutesByTo: FileRoutesByTo;
	to: "/";
	id: "__root__" | "/";
	fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
}
export interface FileServerRoutesByFullPath {
	"/api/webhooks/mittwald": typeof ApiWebhooksMittwaldServerRoute;
}
export interface FileServerRoutesByTo {
	"/api/webhooks/mittwald": typeof ApiWebhooksMittwaldServerRoute;
}
export interface FileServerRoutesById {
	__root__: typeof rootServerRouteImport;
	"/api/webhooks/mittwald": typeof ApiWebhooksMittwaldServerRoute;
}
export interface FileServerRouteTypes {
	fileServerRoutesByFullPath: FileServerRoutesByFullPath;
	fullPaths: "/api/webhooks/mittwald";
	fileServerRoutesByTo: FileServerRoutesByTo;
	to: "/api/webhooks/mittwald";
	id: "__root__" | "/api/webhooks/mittwald";
	fileServerRoutesById: FileServerRoutesById;
}
export interface RootServerRouteChildren {
	ApiWebhooksMittwaldServerRoute: typeof ApiWebhooksMittwaldServerRoute;
}

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexRouteImport;
			parentRoute: typeof rootRouteImport;
		};
	}
}
declare module "@tanstack/react-start/server" {
	interface ServerFileRoutesByPath {
		"/api/webhooks/mittwald": {
			id: "/api/webhooks/mittwald";
			path: "/api/webhooks/mittwald";
			fullPath: "/api/webhooks/mittwald";
			preLoaderRoute: typeof ApiWebhooksMittwaldServerRouteImport;
			parentRoute: typeof rootServerRouteImport;
		};
	}
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
};
export const routeTree = rootRouteImport
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();
const rootServerRouteChildren: RootServerRouteChildren = {
	ApiWebhooksMittwaldServerRoute: ApiWebhooksMittwaldServerRoute,
};
export const serverRouteTree = rootServerRouteImport
	._addFileChildren(rootServerRouteChildren)
	._addFileTypes<FileServerRouteTypes>();
